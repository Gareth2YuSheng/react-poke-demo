{"version":3,"sources":["Pagination.js","SearchPoke.js","PokemonList.js","Loading.js","logo_crop.png","mudkip.png","Home.js","InfoPagination.js","PokemonInfo.js","PokemonType.js","PokemonAbility.js","App.js","index.js"],"names":["Pagination","nextPage","prevPage","className","onClick","SearchPoke","useState","searchParams","setSearchParams","history","useHistory","search","console","log","push","toLowerCase","id","type","placeholder","onChange","e","target","value","onKeyUp","key","PokemonList","pokemon","map","p","to","url","substring","length","name","charAt","toUpperCase","Loading","style","height","Home","setPokemon","currentPageUrl","setCurrentPageUrl","nextPageUrl","setNextPageUrl","prevPageUrl","setPrevPageUrl","loading","setLoading","useEffect","cancel","axios","get","cancelToken","CancelToken","c","then","res","data","results","next","previous","padding","Grid","container","src","logo","alt","mudkip","InfoPagination","parseInt","PokemonInfo","useParams","pokemonInfo","setPokemonInfo","spriteShiny","setSpriteShiny","spriteBtnSelected","setSpriteBtnSelected","types","catch","error","sprites","other","front_default","display","front_female","back_default","back_female","front_shiny_female","front_shiny","back_shiny","back_shiny_female","abilities","ability","is_hidden","weight","stats","stat","replace","base_stat","reduce","total","num","PokemonType","typeInfo","setTypeInfo","setType","generation","split","damage_relations","double_damage_to","half_damage_to","no_damage_from","half_damage_from","double_damage_from","moves","move","PokemonAbility","abilityInfo","setAbilityInfo","pokemonHidden","setPokemonHidden","abilityName","setAbilityName","flavorTexts","setFlavorTexts","tidyGenName","gen","w","splice","join","filter","undefined","ft","flavor_text_entries","f","language","hasOwnProperty","flavor_text","version_group","obj","arr","x","convertFtObjToArray","effect_entries","effect","flavorText","names","n","App","exact","path","from","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ac51b66.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\n\r\nexport default function Pagination({ nextPage, prevPage }) {\r\n    return (\r\n        <div>\r\n            {prevPage && <button className=\"navLink pokemonName previous\" onClick={prevPage}>Previous</button>}\r\n            {nextPage && <button className=\"navLink pokemonName next\" onClick={nextPage}>Next</button>}\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport default function SearchPoke() {\r\n    const [searchParams, setSearchParams] = useState(\"\");\r\n    const history = useHistory();\r\n\r\n    function search() {\r\n        console.log(searchParams);\r\n        history.push(\"/pokemonInfo/\"+searchParams.toLowerCase());\r\n    }\r\n\r\n    function handleKeyPress(e) {\r\n        if (e.key === 'Enter') {\r\n            search();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id=\"search\">\r\n            <input className=\"searchBar\" type=\"text\" placeholder=\"Search for Pokemon by name or Pokedex no. (e.g. Ditto or 132)\" onChange={(e) => setSearchParams(e.target.value)} onKeyUp={handleKeyPress}  />\r\n            <button className=\"searchButton\" onClick={search} type=\"submit\"><i className=\"fa fa-search\"></i></button>                        \r\n        </div> \r\n    )\r\n}\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default function PokemonList({ pokemon }) {\r\n    return (\r\n        <ul className=\"pokemonList\">\r\n            {pokemon.map(p => (\r\n                <li key={p.name}>\r\n                    <Link to={\"/pokemonInfo/\"+p.url.substring(34,p.url.length-1)} className=\"pokemonName\" key={p.name}>{p.name.charAt(0).toUpperCase()+p.name.substring(1)}</Link>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport SkeletonLoader from \"tiny-skeleton-loader-react\";\r\n\r\nexport default function Loading() {\r\n    return (\r\n        <SkeletonLoader style={{height:\"40px\"}}/>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo_crop.905b5a51.png\";","export default __webpack_public_path__ + \"static/media/mudkip.63418b14.png\";","import React, {useState, useEffect} from 'react'\r\nimport Pagination from './Pagination';\r\nimport SearchPoke from './SearchPoke';\r\nimport PokemonList from './PokemonList';\r\nimport Loading from './Loading';\r\nimport axios from 'axios';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport logo from './logo_crop.png';\r\nimport mudkip from './mudkip.png';\r\nimport './App.css';\r\n\r\nexport default function Home() {\r\n    const [pokemon, setPokemon] = useState([]);\r\n    const [currentPageUrl, setCurrentPageUrl] = useState(\"https://pokeapi.co/api/v2/pokemon\");\r\n    const [nextPageUrl, setNextPageUrl] = useState(\"\");\r\n    const [prevPageUrl, setPrevPageUrl] = useState(\"\");\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        let cancel;\r\n        axios.get(currentPageUrl, {\r\n            cancelToken: new axios.CancelToken(c => cancel=c)\r\n        }).then(res => {\r\n            setPokemon(res.data.results);\r\n            setNextPageUrl(res.data.next);\r\n            setPrevPageUrl(res.data.previous);\r\n            setLoading(false);\r\n        })\r\n\r\n    return () => cancel();\r\n    },[currentPageUrl]);\r\n\r\n    function nextPage() {\r\n    setCurrentPageUrl(nextPageUrl);\r\n    }\r\n\r\n    function prevPage() {\r\n    setCurrentPageUrl(prevPageUrl);\r\n    }\r\n\r\n    if (loading) return <Loading />;\r\n    \r\n    \r\n    return (\r\n        <div style={{padding:\"20px 60px\"}}>\r\n            <Grid container className=\"main-con red\" >\r\n                <div className=\"container\">\r\n                    <img className=\"logo\" src={logo} alt=\"pokemon\" />\r\n                    <img className=\"art\" src={mudkip} alt=\"mudkip\" />\r\n                </div>\r\n\r\n                <div className=\"container\">\r\n                    <h3>Pokémon Search</h3>\r\n                    <div className=\"searchCon\" style={{ }}>\r\n                        <SearchPoke />\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"container\">\r\n                    <h3>List of Pokémon</h3>\r\n                    <PokemonList pokemon={pokemon} />\r\n                    <Pagination nextPage={nextPageUrl ? nextPage : null} prevPage={prevPageUrl ? prevPage : null} /> \r\n                </div>\r\n                \r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default function InfoPagination({ id }) {\r\n    id = parseInt(id);\r\n    return (\r\n        <div>\r\n            {(id-1)>0 && <Link to={\"/pokemonInfo/\"+(id-1)} className=\"pokemonName previous navLink\">&laquo; Previous</Link>}\r\n            {(id+1)<899 && <Link to={\"/pokemonInfo/\"+(id+1)} className=\"pokemonName next navLink\">Next &raquo;</Link>}\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Link, useParams} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InfoPagination from './InfoPagination';\r\nimport SearchPoke from './SearchPoke';\r\nimport Loading from './Loading';\r\n\r\nexport default function PokemonInfo() {\r\n    let { id } = useParams();\r\n    const [pokemonInfo, setPokemonInfo] = useState();\r\n    const [loading, setLoading] = useState(true);\r\n    const [spriteShiny, setSpriteShiny] = useState(false);\r\n    const [spriteBtnSelected, setSpriteBtnSelected] = useState([\"\", \"\"]);\r\n    \r\n    useEffect(() => {\r\n        axios.get(\"https://pokeapi.co/api/v2/pokemon/\"+id).then(res => {\r\n            setPokemonInfo(res.data);\r\n            setLoading(false);\r\n            setSpriteBtnSelected([res.data.types[0].type.name, \"\"]);\r\n            setSpriteShiny(false);\r\n        }).catch(error => {\r\n            setLoading(false);\r\n            setPokemonInfo(null);\r\n        })\r\n    }, [id]);\r\n\r\n    function toggleSpriteDefault() {\r\n        setSpriteShiny(false);\r\n        setSpriteBtnSelected([pokemonInfo.types[0].type.name, \"\"]);\r\n    }\r\n\r\n    function toggleSpriteShiny() {\r\n        setSpriteShiny(true);\r\n        setSpriteBtnSelected([\"\", pokemonInfo.types[0].type.name]);\r\n    }\r\n\r\n    if (loading) return <Loading />;\r\n\r\n    return (\r\n        <div style={{padding:\"20px 60px\"}}>\r\n            <Link to=\"/react-poke-demo\" className=\"pokemonName navLink\">Back to Home</Link>\r\n\r\n            <div className=\"searchConSide\">\r\n                <SearchPoke />\r\n            </div>\r\n\r\n            {!pokemonInfo && <div className=\"error\">\r\n                Pokemon not found\r\n            </div>}\r\n            \r\n            {pokemonInfo && <div>\r\n                <InfoPagination id={pokemonInfo.id} />            \r\n\r\n                <Grid container className={\"main-con \"+pokemonInfo.types[0].type.name}>\r\n\r\n                    <div className=\"container\">\r\n                        <h2>{pokemonInfo.name.charAt(0).toUpperCase()+pokemonInfo.name.substring(1)+\"  #\"+pokemonInfo.id}</h2>\r\n                        {pokemonInfo.sprites.other[\"official-artwork\"].front_default && <img className=\"artwork\" src={pokemonInfo.sprites.other[\"official-artwork\"].front_default} alt=\"official artwork\" />}\r\n                    </div>\r\n                    \r\n                    <div className=\"container\">\r\n                        <h3 id=\"spritesHeading\">Sprites</h3>\r\n\r\n                        <div id=\"spriteToggleBtnCon\">\r\n                            <button className={\"spriteToggleBtn \"+spriteBtnSelected[0]} onClick={toggleSpriteDefault} >Default</button>\r\n                            <button className={\"spriteToggleBtn \"+spriteBtnSelected[1]} onClick={toggleSpriteShiny} >Shiny</button>\r\n                        </div>\r\n\r\n                        <div style={{display:'flex'}}>   \r\n\r\n                            {!spriteShiny && <div id=\"default_sprite\">\r\n                                <div className=\"male\">\r\n                                    {pokemonInfo.sprites.front_female && <h4 className=\"gender\">Male</h4>}\r\n                                    {pokemonInfo.sprites.front_default && <img className=\"sprite\" src={pokemonInfo.sprites.front_default} alt={pokemonInfo.name+\" front\"} />}\r\n                                    {pokemonInfo.sprites.back_default && <img className=\"sprite\" src={pokemonInfo.sprites.back_default} alt={pokemonInfo.name+\" back\"} />}\r\n                                </div>\r\n                                {pokemonInfo.sprites.front_female && <div className=\"female\">\r\n                                    <h4 className=\"gender\">Female</h4>\r\n                                    {pokemonInfo.sprites.front_female && <img className=\"sprite\" src={pokemonInfo.sprites.front_female} alt={pokemonInfo.name+\" front\"} />}\r\n                                    {pokemonInfo.sprites.back_female && <img className=\"sprite\" src={pokemonInfo.sprites.back_female} alt={pokemonInfo.name+\" back\"} />}\r\n                                </div>}\r\n                            </div>}\r\n\r\n                            {spriteShiny && <div id=\"shiny_sprite\">\r\n                                <div className=\"male\">\r\n                                    {pokemonInfo.sprites.front_shiny_female && <h4 className=\"gender\">Male</h4>}\r\n                                    {pokemonInfo.sprites.front_shiny && <img className=\"sprite\" src={pokemonInfo.sprites.front_shiny} alt={pokemonInfo.name+\" shiny front\"} />}\r\n                                    {pokemonInfo.sprites.back_shiny && <img className=\"sprite\" src={pokemonInfo.sprites.back_shiny} alt={pokemonInfo.name+\" shiny back\"} />}\r\n                                </div>\r\n                                {pokemonInfo.sprites.front_shiny_female && <div className=\"female\">\r\n                                    <h4 className=\"gender\">Female</h4>\r\n                                    {pokemonInfo.sprites.front_shiny_female && <img className=\"sprite\" src={pokemonInfo.sprites.front_shiny_female} alt={pokemonInfo.name+\" shiny front\"} />}\r\n                                    {pokemonInfo.sprites.back_shiny_female && <img className=\"sprite\" src={pokemonInfo.sprites.back_shiny_female} alt={pokemonInfo.name+\" shiny back\"} />}\r\n                                </div>}\r\n                            </div>}\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"container\">\r\n                        <h3>Type(s)</h3>\r\n                        <div className=\"types\">\r\n                            {pokemonInfo.types.map(type => (\r\n                                <Link key={type.type.name} to={\"/type/\"+type.type.name} className={\"type \"+type.type.name}>{type.type.name.charAt(0).toUpperCase()+type.type.name.substring(1)}</Link>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"container\">\r\n                        <h3>Abilities</h3>\r\n                        <div id=\"abilities\">\r\n                            {pokemonInfo.abilities.map(ability => (\r\n                                <p key={ability.ability.name} className=\"ability\">\r\n                                    {ability.is_hidden ? <Link to={\"/ability/\"+ability.ability.name} className=\"\">{ability.ability.name.charAt(0).toUpperCase()+ability.ability.name.substring(1)+\" (hidden)\"}</Link> : <Link to={\"/ability/\"+ability.ability.name} className=\"\">{ability.ability.name.charAt(0).toUpperCase()+ability.ability.name.substring(1)}</Link>}\r\n                                </p>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"container\">\r\n                        <h3>Height & Weight</h3>\r\n                        <div id=\"hnw\">\r\n                            <h4>Height:</h4><p>{pokemonInfo.height/10+\" m\"}</p>\r\n                            <h4>Weight:</h4><p>{pokemonInfo.weight/10+\" kg\"}</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"container\">\r\n                        <h3>Stats</h3>\r\n                        <div id=\"stats\">\r\n                            <table>\r\n                                <tbody>\r\n                                    {pokemonInfo.stats.map(stat => (\r\n                                        <tr key={stat.stat.name.charAt(0).toUpperCase()+stat.stat.name.substring(1).replace(\"-\",\" \")}>\r\n                                            <th>\r\n                                                {stat.stat.name.charAt(0).toUpperCase()+stat.stat.name.substring(1).replace(\"-\",\" \")}\r\n                                            </th>\r\n                                            <td>\r\n                                                {stat.base_stat}\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                    <tr>\r\n                                        <th key=\"total\">Total</th>\r\n                                        <td>{[0, ...pokemonInfo.stats].reduce((total, num)=>{return total+num.base_stat;})}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </Grid>\r\n            </div>}\r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {Link, useParams} from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PokemonList from './PokemonList';\r\nimport Loading from './Loading';\r\n\r\nexport default function PokemonType() {\r\n    let { id } = useParams();\r\n    const [typeInfo, setTypeInfo] = useState();\r\n    const [pokemon, setPokemon] = useState();\r\n    const [loading, setLoading] = useState(true);\r\n    const [type, setType] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        axios.get(\"https://pokeapi.co/api/v2/type/\"+id).then(res => {\r\n            setTypeInfo(res.data);\r\n            setPokemon(res.data.pokemon.map(p => ({\"name\": p.pokemon.name, \"url\": p.pokemon.url})));\r\n            setLoading(false);\r\n            setType(res.data.name.charAt(0).toUpperCase()+res.data.name.substring(1));\r\n        })\r\n    },[id]);\r\n\r\n    if (loading) return <Loading />;\r\n\r\n    return (\r\n        <div style={{padding:\"20px 60px\"}}>\r\n            <Link to=\"/react-poke-demo\" className=\"pokemonName navLink\">Back to Home</Link>\r\n            \r\n            <Grid container className={\"main-con \"+id} >\r\n\r\n                <div className=\"container\">\r\n                    <h2 id=\"typename\">{type}</h2>\r\n                    <p>{\"Introduced in Generation \"+typeInfo.generation.name.split(\"-\")[1].toUpperCase()}</p>\r\n                    \r\n                    <div className=\"typeAnD\">\r\n                        <h3>Attack</h3>\r\n                        <p>{type+\" is Super Efective against:\"}</p>\r\n                        <div className=\"types\">\r\n                            {typeInfo.damage_relations.double_damage_to.map(type => (\r\n                                <Link key={type.name} to={\"/type/\"+type.name} className={\"type \"+type.name}>{type.name.charAt(0).toUpperCase()+type.name.substring(1)}</Link>\r\n                            ))}\r\n                        </div>\r\n                        <p>{type+\" is Not Very Effective against:\"}</p>\r\n                        <div className=\"types\">\r\n                            {typeInfo.damage_relations.half_damage_to.map(type => (\r\n                                <Link key={type.name} to={\"/type/\"+type.name} className={\"type \"+type.name}>{type.name.charAt(0).toUpperCase()+type.name.substring(1)}</Link>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"typeAnD\">\r\n                        <h3>Defence</h3>\r\n                        <p>{\"Types that have No Effect against \"+type+\":\"}</p>\r\n                        <div className=\"types\">\r\n                            {typeInfo.damage_relations.no_damage_from.map(type => (\r\n                                <Link key={type.name} to={\"/type/\"+type.name} className={\"type \"+type.name}>{type.name.charAt(0).toUpperCase()+type.name.substring(1)}</Link>\r\n                            ))}\r\n                        </div>\r\n                        <p>{\"Types that are Not Very Effective against \"+type+\":\"}</p>\r\n                        <div className=\"types\">\r\n                            {typeInfo.damage_relations.half_damage_from.map(type => (\r\n                                <Link key={type.name} to={\"/type/\"+type.name} className={\"type \"+type.name}>{type.name.charAt(0).toUpperCase()+type.name.substring(1)}</Link>\r\n                            ))}\r\n                        </div>\r\n                        <p>{\"Types that are Super Effective against \"+type+\":\"}</p>\r\n                        <div className=\"types\">\r\n                            {typeInfo.damage_relations.double_damage_from.map(type => (\r\n                                <Link key={type.name} to={\"/type/\"+type.name} className={\"type \"+type.name}>{type.name.charAt(0).toUpperCase()+type.name.substring(1)}</Link>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"typeAnD\">\r\n                        <h3>Moves</h3>\r\n                        <ul className=\"moveList\">\r\n                            {typeInfo.moves.map(move => (\r\n                                <li key={move.name} className=\"moveName\">{move.name.charAt(0).toUpperCase()+move.name.substring(1)}</li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"container\">\r\n                    <h3>List of Pokémon with this Type:</h3>\r\n                    <PokemonList pokemon={pokemon} />\r\n                </div>\r\n                \r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Link, useParams} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport PokemonList from './PokemonList';\r\nimport Loading from './Loading';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nexport default function PokemonAbility() {\r\n    let { id } = useParams();\r\n    const [loading, setLoading] = useState(true);\r\n    const [abilityInfo, setAbilityInfo] = useState();\r\n    const [pokemon, setPokemon] = useState([]);\r\n    const [pokemonHidden, setPokemonHidden] = useState([]);\r\n    const [abilityName, setAbilityName] = useState(\"\");\r\n    const [flavorTexts, setFlavorTexts] = useState({});\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        axios.get(\"https://pokeapi.co/api/v2/ability/\"+id).then(res => {\r\n            setAbilityInfo(res.data);\r\n            setAbilityName(res.data.name.charAt(0).toUpperCase()+res.data.name.substring(1));\r\n            setPokemon(res.data.pokemon.map(p => {\r\n                if (!p.is_hidden) return {\"name\": p.pokemon.name, \"url\": p.pokemon.url};\r\n            }).filter(p => (p!==undefined)));\r\n            setPokemonHidden(res.data.pokemon.map(p => {\r\n                if (p.is_hidden) return {\"name\": p.pokemon.name, \"url\": p.pokemon.url};\r\n            }).filter(p => (p!==undefined)));\r\n            let ft ={};\r\n            res.data.flavor_text_entries.map(f => {\r\n                if (f.language.name==\"en\") {\r\n                    if (!ft.hasOwnProperty(f.flavor_text)) {\r\n                        ft[f.flavor_text] = [tidyGenName(f.version_group.name)];\r\n                    } else {\r\n                        ft[f.flavor_text].push(tidyGenName(f.version_group.name));\r\n                    }\r\n                }\r\n            });\r\n            setFlavorTexts(convertFtObjToArray(ft));\r\n            setLoading(false);\r\n        })\r\n    },[id]);\r\n\r\n    function tidyGenName(gen) {\r\n        gen = gen.split(\"-\");\r\n        gen = gen.map(w => (w.charAt(0).toUpperCase()+w.substring(1)));\r\n        if (gen.length > 1) {\r\n            gen.splice(gen.length/2,0,\"/\");\r\n            return gen.join(\" \");\r\n        } \r\n        return gen[0];\r\n    }\r\n\r\n    function convertFtObjToArray(obj) {\r\n        let arr = [];\r\n        for (let x in obj) {\r\n            arr.push({\"flavorText\": x, \"gen\": obj[x]});\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    if (loading) return <Loading />;\r\n\r\n    return (\r\n        <div style={{padding:\"20px 60px\"}}>\r\n            <Link to=\"/react-poke-demo\" className=\"pokemonName navLink\">Back to Home</Link>\r\n\r\n            <Grid container className={\"main-con red\"} >\r\n\r\n                <div className=\"container\">\r\n                    <h2>{abilityName+\" (Ability)\"}</h2>\r\n                    <p>{\"Introduced in Generation \"+abilityInfo.generation.name.split(\"-\")[1].toUpperCase()}</p>\r\n\r\n                    <div className=\"typeAnD\">\r\n                        <h3>Effect</h3>\r\n                        <p>{abilityInfo.effect_entries.filter(e => {if (e.language.name==\"en\") return e.effect})[0].effect}</p>\r\n                    </div>\r\n\r\n                    <div className=\"typeAnD\">\r\n                        <h3>Game descriptions</h3>\r\n                        <table>\r\n                            <tbody>\r\n                                {flavorTexts.map(ft => (<tr>\r\n                                    <th>{ft.gen.join(\" | \")}</th>\r\n                                    <td>{ft.flavorText}</td>\r\n                                </tr>))}\r\n                                \r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n\r\n                    <div className=\"typeAnD\" id=\"otherLang\">\r\n                        <h3>Other Languages</h3>\r\n                        <table>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <th>Japanese</th>\r\n                                    <td>{abilityInfo.names.map(n => {if (n.language.name==\"ja-Hrkt\") return n.name})}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>Korean</th>\r\n                                    <td>{abilityInfo.names.map(n => {if (n.language.name==\"ko\") return n.name})}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>Chinese</th>\r\n                                    <td>{abilityInfo.names.map(n => {if (n.language.name==\"zh-Hans\") return n.name})}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>French</th>\r\n                                    <td>{abilityInfo.names.map(n => {if (n.language.name==\"fr\") return n.name})}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>German</th>\r\n                                    <td>{abilityInfo.names.map(n => {if (n.language.name==\"de\") return n.name})}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>Spanish</th>\r\n                                    <td>{abilityInfo.names.map(n => {if (n.language.name==\"es\") return n.name})}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>Italian</th>\r\n                                    <td>{abilityInfo.names.map(n => {if (n.language.name==\"it\") return n.name})}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n\r\n                    \r\n                </div>\r\n                \r\n                <div className=\"container\">\r\n                    <h3>{\"Pokemon with \"+abilityName}</h3>\r\n                    <PokemonList pokemon={pokemon} />\r\n                </div>\r\n\r\n                <div className=\"container\">\r\n                    <h3>{\"Pokemon with \"+abilityName+\" as a Hidden Ability\"}</h3>\r\n                    <PokemonList pokemon={pokemonHidden} />\r\n                </div>\r\n                \r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n","import Home from './Home';\r\nimport PokemonInfo from './PokemonInfo';\r\nimport PokemonType from './PokemonType';\r\nimport PokemonAbility from './PokemonAbility';\r\nimport {Route, Switch, BrowserRouter as Router, Redirect } from 'react-router-dom';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Redirect exact from=\"/\" to=\"/react-poke-demo\" />\r\n        </Route>\r\n        <Route exact path=\"/react-poke-demo\">\r\n          <Home />\r\n        </Route>\r\n        <Route exact path=\"/pokemonInfo/:id\">\r\n          <PokemonInfo />\r\n        </Route>\r\n        <Route exact path=\"/type/:id\">\r\n          <PokemonType />\r\n        </Route>\r\n        <Route exact path=\"/ability/:id\">\r\n          <PokemonAbility />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}